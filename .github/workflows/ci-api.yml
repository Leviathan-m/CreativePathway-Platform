name: CI - API Service

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'backend/api/**'
      - '.github/workflows/ci-api.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'backend/api/**'
      - '.github/workflows/ci-api.yml'

jobs:
  lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend/api

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: backend/api/package-lock.json

    - name: Install dependencies
      run: npm ci

    - name: Run ESLint
      run: npm run lint

    - name: Check code formatting
      run: npm run format:check

  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend/api

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: backend/api/package-lock.json

    - name: Install dependencies
      run: npm ci

    - name: Run tests
      run: npm run test:ci

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./backend/api/coverage/lcov.info
        flags: api
        name: API Coverage

  security:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend/api

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: backend/api/package-lock.json

    - name: Install dependencies
      run: npm ci

    - name: Run security audit
      run: npm run security

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: './backend/api'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  build:
    runs-on: ubuntu-latest
    needs: [lint, test, security]
    defaults:
      run:
        working-directory: backend/api

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: backend/api/package-lock.json

    - name: Install dependencies
      run: npm ci

    - name: Build application
      run: npm run build

    - name: Build Docker image
      run: |
        docker build -t creative-pathway-api:${{ github.sha }} .
        docker build -t creative-pathway-api:latest .

    - name: Test Docker image
      run: |
        docker run --rm creative-pathway-api:${{ github.sha }} npm test || true

  docker-security-scan:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Build Docker image for scanning
      working-directory: backend/api
      run: docker build -t creative-pathway-api-scan .

    - name: Run Trivy on Docker image
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'image'
        scan-ref: 'creative-pathway-api-scan'
        format: 'sarif'
        output: 'docker-trivy-results.sarif'

    - name: Upload Docker scan results
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'docker-trivy-results.sarif'
